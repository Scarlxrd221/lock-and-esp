make this scripts into a loadstring github 

local loadstring = loadstring or load

-- Combined script
local combinedScript = [[
-- Script 1: Create vertical health bar for players
local Players = game:GetService("Players")

local function createHealthBar(character)
    local humanoid = character:WaitForChild("Humanoid")
    local rootPart = character:WaitForChild("HumanoidRootPart")

    local billboardGui = Instance.new("BillboardGui")
    billboardGui.Adornee = rootPart
    billboardGui.Size = UDim2.new(0, 5, 0, 50)
    billboardGui.StudsOffset = Vector3.new(2, 0, 0)
    billboardGui.AlwaysOnTop = true

    local bgFrame = Instance.new("Frame")
    bgFrame.Size = UDim2.new(1, 0, 1, 0)
    bgFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    bgFrame.BorderSizePixel = 0
    bgFrame.Parent = billboardGui

    local healthBar = Instance.new("Frame")
    healthBar.AnchorPoint = Vector2.new(0, 1)
    healthBar.Position = UDim2.new(0, 0, 1, 0)
    healthBar.Size = UDim2.new(1, 0, 1, 0)
    healthBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    healthBar.BorderSizePixel = 0
    healthBar.Parent = bgFrame

    billboardGui.Parent = character

    local function updateHealthBar()
        local healthPercent = humanoid.Health / humanoid.MaxHealth
        healthBar.Size = UDim2.new(1, 0, healthPercent, 0)
        if healthPercent > 0.5 then
            healthBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        elseif healthPercent > 0.25 then
            healthBar.BackgroundColor3 = Color3.fromRGB(255, 165, 0)
        else
            healthBar.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        end
    end

    humanoid.HealthChanged:Connect(updateHealthBar)
    updateHealthBar()
end

local function onCharacterAdded(character)
    createHealthBar(character)
end

local function onPlayerAdded(player)
    player.CharacterAdded:Connect(onCharacterAdded)
    if player.Character then
        onCharacterAdded(player.Character)
    end
end

for _, player in ipairs(Players:GetPlayers()) do
    if player ~= Players.LocalPlayer then
        onPlayerAdded(player)
    end
end

Players.PlayerAdded:Connect(function(player)
    if player ~= Players.LocalPlayer then
        onPlayerAdded(player)
    end
end)

-- Script 2: Chams, outline, and player locking functionality
local UserInputService = game:GetService("UserInputService")
local Camera = game.Workspace.CurrentCamera

local altPressed = false
local lockedPlayer = nil

local function lockOntoPlayerNeck(player)
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local humanoidRootPart = player.Character.HumanoidRootPart
        local head = player.Character.Head

        local neckPosition = head.Position - Vector3.new(0, head.Size.Y/2, 0)

        Camera.CFrame = CFrame.new(Camera.CFrame.Position, neckPosition)
    end
end

local function createChams(player)
    if player.Character then
        local character = player.Character

        if character:FindFirstChild("ChamsSurfaceGui") then
            character.ChamSurfaceGui:Destroy()
        end

        local surfaceGui = Instance.new("SurfaceGui")
        surfaceGui.Name = "ChamsSurfaceGui"
        surfaceGui.Adornee = character
        surfaceGui.LightInfluence = 0
        surfaceGui.Parent = character

        local frame = Instance.new("Frame")
        frame.Size = UDim2.new(1, 0, 1, 0)
        frame.BorderSizePixel = 0
        frame.BackgroundColor3 = Color3.fromRGB(0, 0, 255)
        frame.BackgroundTransparency = 0.5
        frame.ZIndex = 10
        frame.Parent = surfaceGui
    end
end

local function removeChams(player)
    if player.Character then
        local character = player.Character
        local chamsSurfaceGui = character:FindFirstChild("ChamsSurfaceGui")
        if chamsSurfaceGui then
            chamsSurfaceGui:Destroy()
        end
    end
end

local function createOutline(player)
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        if not player.Character:FindFirstChild("Highlight") then
            local highlight = Instance.new("Highlight")
            highlight.Name = "Highlight"
            highlight.FillTransparency = 1
            highlight.OutlineTransparency = 0
            highlight.OutlineColor = Color3.fromRGB(0, 0, 100)
            highlight.Parent = player.Character
        end
    end
end

local function onCharacterAdded(character)
    repeat wait() until character:FindFirstChild("HumanoidRootPart")
    createOutline(Players:GetPlayerFromCharacter(character))
    if lockedPlayer == Players:GetPlayerFromCharacter(character) then
        createChams(lockedPlayer)
    end
end

local function onPlayerAdded(player)
    if player.Character then
        onCharacterAdded(player.Character)
    end
    player.CharacterAdded:Connect(function(character)
        onCharacterAdded(character)
    end)
end

local function toggleLock()
    altPressed = not altPressed

    if altPressed then
        local closestPlayer = nil
        local shortestDistance = math.huge

        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= Players.LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local distance = (player.Character.HumanoidRootPart.Position - Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                if distance < shortestDistance then
                    shortestDistance = distance
                    closestPlayer = player
                end
            end
        end

        if closestPlayer then
            lockedPlayer = closestPlayer
            lockOntoPlayerNeck(lockedPlayer)
            createChams(lockedPlayer)
        end
    else
        lockedPlayer = nil
        removeChams(Players.LocalPlayer)
    end
end

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.LeftAlt then
        toggleLock()
    end
end)

game:GetService("RunService").Stepped:Connect(function()
    if altPressed and lockedPlayer then
        lockOntoPlayerNeck(lockedPlayer)
    end
end)

for _, player in ipairs(Players:GetPlayers()) do
    onPlayerAdded(player)
end

Players.PlayerAdded:Connect(onPlayerAdded)

Players.PlayerRemoving:Connect(function(player)
    removeChams(player)
end)
]]

-- Load and execute the combined script
local scriptFunction, error = loadstring(combinedScript)
if scriptFunction then
    scriptFunction()  -- Execute the combined script
else
    error("Error loading combined script: " .. error)
end
