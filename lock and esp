local Settings = {
    Box_Color = Color3.fromRGB(255, 0, 0),
    Box_Thickness = 1,
    Tracers = false  -- Set to false to disable tracers
}

local Team_Check = {
    TeamCheck = false,
    Green = Color3.fromRGB(0, 255, 0),
    Red = Color3.fromRGB(255, 0, 0)
}

local TeamColor = true  -- Toggle for team color visibility

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local Camera = game.Workspace.CurrentCamera

local rightMousePressed = false  -- Variable to track right mouse button state
local lockedPlayer = nil  -- Variable to store currently locked player

local function NewQuad(thickness, color)
    local quad = Drawing.new("Quad")
    quad.Visible = false
    quad.Color = color
    quad.Filled = false
    quad.Thickness = thickness
    quad.Transparency = 1
    return quad
end

local function Visibility(state, lib)
    for _, x in pairs(lib) do
        x.Visible = state
    end
end

local function ESP(plr)
    local library = {
        black = NewQuad(Settings.Box_Thickness * 2, Color3.new(0, 0, 0)),
        box = NewQuad(Settings.Box_Thickness, Settings.Box_Color)
    }

    local function Colorize(color)
        for _, x in pairs(library) do
            x.Color = color
        end
    end

    local function Updater()
        local connection
        connection = game:GetService("RunService").RenderStepped:Connect(function()
            if plr.Character and plr.Character:FindFirstChild("Humanoid") and plr.Character:FindFirstChild("HumanoidRootPart") then
                local HumPos, OnScreen = Camera:WorldToViewportPoint(plr.Character.HumanoidRootPart.Position)
                if OnScreen then
                    local function CalculateBoxSize()
                        local head = plr.Character:FindFirstChild("Head")
                        local humanoidRootPart = plr.Character:FindFirstChild("HumanoidRootPart")
                        if head and humanoidRootPart then
                            local headPos, headOnScreen = Camera:WorldToViewportPoint(head.Position)
                            local rootPos, rootOnScreen = Camera:WorldToViewportPoint(humanoidRootPart.Position)
                            if headOnScreen and rootOnScreen then
                                local distanceY = (headPos.Y - rootPos.Y) * 2  -- Double the distance from root to head to encompass whole character
                                local distanceX = distanceY / 2  -- Adjust X distance proportionally
                                return Vector2.new(distanceX, distanceY)
                            end
                        end
                        return Vector2.new(10, 30)  -- Default size if character or parts are not found
                    end

                    local boxSize = CalculateBoxSize()
                    local function Size(item)
                        item.PointA = Vector2.new(HumPos.X + boxSize.X, HumPos.Y - boxSize.Y)
                        item.PointB = Vector2.new(HumPos.X - boxSize.X, HumPos.Y - boxSize.Y)
                        item.PointC = Vector2.new(HumPos.X - boxSize.X, HumPos.Y + boxSize.Y)
                        item.PointD = Vector2.new(HumPos.X + boxSize.X, HumPos.Y + boxSize.Y)
                    end
                    Size(library.box)
                    Size(library.black)

                    if Team_Check.TeamCheck then
                        if plr.TeamColor == Players.LocalPlayer.TeamColor then
                            Colorize(Team_Check.Green)
                        else 
                            Colorize(Team_Check.Red)
                        end
                    else 
                        library.box.Color = Settings.Box_Color
                    end

                    if TeamColor then
                        Colorize(plr.TeamColor.Color)
                    end

                    Visibility(true, library)
                else 
                    Visibility(false, library)
                end
            else 
                Visibility(false, library)
                if not Players:FindFirstChild(plr.Name) then
                    connection:Disconnect()
                end
            end
        end)
    end
    coroutine.wrap(Updater)()
end

local function createHealthBar(character)
    local humanoid = character:WaitForChild("Humanoid")
    local rootPart = character:WaitForChild("HumanoidRootPart")

    local billboardGui = Instance.new("BillboardGui")
    billboardGui.Adornee = rootPart
    billboardGui.Size = UDim2.new(0, 5, 0, 50)
    billboardGui.StudsOffset = Vector3.new(2, 0, 0)
    billboardGui.AlwaysOnTop = true

    local bgFrame = Instance.new("Frame")
    bgFrame.Size = UDim2.new(1, 0, 1, 0)
    bgFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    bgFrame.BorderSizePixel = 0
    bgFrame.Parent = billboardGui

    local healthBar = Instance.new("Frame")
    healthBar.AnchorPoint = Vector2.new(0, 1)
    healthBar.Position = UDim2.new(0, 0, 1, 0)
    healthBar.Size = UDim2.new(1, 0, 1, 0)
    healthBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    healthBar.BorderSizePixel = 0
    healthBar.Parent = bgFrame

    billboardGui.Parent = character

    local function updateHealthBar()
        local healthPercent = humanoid.Health / humanoid.MaxHealth
        healthBar.Size = UDim2.new(1, 0, healthPercent, 0)

        if healthPercent > 0.5 then
            healthBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        elseif healthPercent > 0.25 then
            healthBar.BackgroundColor3 = Color3.fromRGB(255, 165, 0)
        else
            healthBar.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        end
    end

    humanoid.HealthChanged:Connect(updateHealthBar)
    updateHealthBar()
end

local function lockOntoPlayerNeck(player)
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local humanoidRootPart = player.Character.HumanoidRootPart
        local head = player.Character.Head
        local neckPosition = head.Position - Vector3.new(0, head.Size.Y/2, 0)
        Camera.CFrame = CFrame.new(Camera.CFrame.Position, neckPosition)
    end
end

local function createChams(player)
    if player.Character then
        local character = player.Character

        if character:FindFirstChild("ChamsSurfaceGui") then
            character.ChamSurfaceGui:Destroy()
        end

        local surfaceGui = Instance.new("SurfaceGui")
        surfaceGui.Name = "ChamsSurfaceGui"
        surfaceGui.Adornee = character
        surfaceGui.LightInfluence = 0
        surfaceGui.Parent = character

        local frame = Instance.new("Frame")
        frame.Size = UDim2.new(1, 0, 1, 0)
        frame.BorderSizePixel = 0
        frame.BackgroundColor3 = Color3.fromRGB(0, 0, 255)
        frame.BackgroundTransparency = 0.5
        frame.ZIndex = 10
        frame.Parent = surfaceGui
    end
end

local function removeChams(player)
    if player.Character then
        local character = player.Character
        local chamsSurfaceGui = character:FindFirstChild("ChamsSurfaceGui")
        if chamsSurfaceGui then
            chamsSurfaceGui:Destroy()
        end
    end
end

local function createOutline(player)
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        if not player.Character:FindFirstChild("Highlight") then
            local highlight = Instance.new("Highlight")
            highlight.Name = "Highlight"
            highlight.FillTransparency = 1
            highlight.OutlineTransparency = 0
            highlight.OutlineColor = Color3.fromRGB(0, 0, 100)
            highlight.Parent = player.Character
        end
    end
end

local function onCharacterAdded(character)
    repeat wait() until character:FindFirstChild("HumanoidRootPart")
    createOutline(Players:GetPlayerFromCharacter(character))
    if lockedPlayer == Players:GetPlayerFromCharacter(character) then
        createChams(lockedPlayer)
    end
    createHealthBar(character)
end

local function onPlayerAdded(player)
    if player.Character then
        onCharacterAdded(player.Character)
    end
    player.CharacterAdded:Connect(function(character)
        onCharacterAdded(character)
    end)
end

local function toggleLock()
    if rightMousePressed then
        local closestPlayer = nil
        local shortestDistance = math.huge
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= Players.LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local distance = (player.Character.HumanoidRootPart.Position - Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                if distance < shortestDistance then
                    shortestDistance = distance
                    closestPlayer = player
                end
            end
        end
        if closestPlayer then
            lockedPlayer = closestPlayer
            lockOntoPlayerNeck(lockedPlayer)
            createChams(lockedPlayer)
        end
    else
